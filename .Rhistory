plot(cars)
lapply(1:5, function(x) c(x, x^2, x^3))
apply(1:5, function(x) c(x, x^2, x^3))
lapply(1:5, function(x) c(x, x^2, x^3))
lapply(1:5, function(x) c(x+100,x+200,x+300))
library("parallel", lib.loc="/usr/lib/R/library")
library(parallel)
detectCores()
library(parallel)
# Calculate the number of cores
number_cores <- detectCores() - 2
# Initiate cluster
my.cluster <- makeCluster(number_cores)
my.cluster
library(parallel)
# Calculate the number of cores and substract 2
number_cores <- detectCores() - 2
# create a cluster using 6 of my computer cores
my.cluster <- makeCluster(number_cores)
parLapply(my.cluster, 2:4,
function(exponent)
2^exponent)
#stop cluster and release resources
stopCluster(cl)
library(parallel)
# Calculate the number of cores and substract 2
number_cores <- detectCores() - 2
# create a cluster using 6 of my computer cores
my.cluster <- makeCluster(number_cores)
parLapply(my.cluster, 2:4,
function(exponent)
2^exponent)
#stop cluster and release resources
stopCluster(my.cluster)
# create a cluster using 6 of my computer cores FORK in environmental variables
my.cluster <- makeCluster(number_cores,type="FORK")
x<-100
parLapply(my.cluster, 2:4,function(x) x+a)
# create a cluster using 6 of my computer cores FORK in environmental variables
my.cluster <- makeCluster(number_cores,type="FORK")
b<-100
parLapply(my.cluster, 2:4,function(x) x+b)
# create a cluster using 6 of my computer cores FORK in environmental variables
my.cluster <- makeCluster(number_cores,type="FORK")
b<-100
parLapply(my.cluster, 2:4,function(x) x+b)
#stop cluster and release resources
stopCluster(my.cluster)
b<-100
# create a cluster using 6 of my computer cores FORK in environmental variables
my.cluster <- makeCluster(number_cores,type="FORK")
parLapply(my.cluster, 2:4,function(x) x+b)
#stop cluster and release resources
stopCluster(my.cluster)
b<-100
# create a cluster using 6 of my computer cores FORK in environmental variables
my.cluster <- makeCluster(number_cores,type="FORK")
parLapply(my.cluster, 2:4,function(x) x+b)
#stop cluster and release resources
stopCluster(my.cluster)
b<-100
# create a cluster using 6 of my computer cores FORK in environmental variables
my.cluster <- makeCluster(number_cores,type="FORK")
parLapply(my.cluster, 2:4,function(x) x+b)
#stop cluster and release resources
stopCluster(my.cluster)
b<-100
# create a cluster using 6 of my computer cores FORK in environmental variables
my.cluster <- makeCluster(number_cores,type="FORK")
# use function parallel list apply
parLapply(my.cluster, 1:5,function(x) x+b)
# stop cluster and release resources
stopCluster(my.cluster)
